language: rust
cache: cargo
sudo: required

env:
  global:
    # Default target on travis-ci.
    # Used as conditional check in the install stage
    - HOST=x86_64-unknown-linux-gnu
    # Used on the deployment script
    - PROJECT_NAME=gpustat

matrix:
  allow_failures:
  include:
    # Stable channel.
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-gnu
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-musl
    - os: linux
      rust: stable
      env: TARGET=i686-unknown-linux-musl
    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin
    - os: linux
      rust: stable
      env:
        - TARGET=arm-unknown-linux-gnueabihf
        - CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc-4.8

    # Beta channel.
    # The other platforms are disabled in order to reduce the total CI time
    - os: linux
      rust: beta
      env: TARGET=x86_64-unknown-linux-gnu

    # Nightly channel.
    # The other platforms are disabled in order to reduce the total CI time
    - os: linux
      rust: nightly
      env: TARGET=x86_64-unknown-linux-gnu

    # Minimum Rust supported channel.
    - os: linux
      rust: 1.52.0
      env: TARGET=x86_64-unknown-linux-gnu
    - os: linux
      rust: 1.52.0
      env: TARGET=i686-unknown-linux-gnu
    - os: osx
      rust: 1.52.0
      env: TARGET=x86_64-apple-darwin
    - os: linux
      rust: 1.52.0
      env:
        - TARGET=arm-unknown-linux-gnueabihf
        - CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc-4.8

    # Code formatting check
    - os: linux
      rust: stable
      # skip the global install step
      install:
        - rustup component add clippy
      script:
        - cargo clippy --all-features

before_install:
  - bash ci/before_install.bash

install:
  # prevent target re-add error from rustup
  - if [[ $TRAVIS_OS_NAME = linux && $HOST != $TARGET ]]; then rustup target add $TARGET; fi

script:
  - bash ci/script.bash

before_deploy:
  - bash ci/before_deploy.bash

deploy:
  provider: releases
  api_key: $GH_TOKEN
  # for uploading multiple files
  file_glob: true
  # NOTE explanation on each env variable
  # - PROJECT_NAME: name of the project, set on the `env.global` above
  # - TRAVIS_TAG: tag name that the build is being deployed for, usually the version number
  # - TARGET: target triple of the build
  file:
    - $PROJECT_NAME-$TRAVIS_TAG-$TARGET.*
    - $PROJECT_NAME*.deb
  # don't delete artifacts from previous stage
  skip_cleanup: true
  on:
    # deploy only if we push a tag
    tags: true
    # deploy only on stable channel that has TARGET env variable sets
    condition: $TRAVIS_RUST_VERSION = stable && $TARGET != ""


notifications:
  email:
    on_success: never